Difficultés : 
- Trouver des sites qui parlent de déploiement en local et non en ligne avec mongo atlas
- Comment faire un routeur
- Comprendre le principe du sharding 
- Trouver la bonne structure pour le docker compose (organisation des services, du réseau...)
- Utiliser mongodb avec python

Commandes : 

Sites : 
Commandes si on n'utilise pas de docker-compose : 
https://www.mongodb.com/resources/products/compatibilities/deploying-a-mongodb-cluster-with-docker

Aides sur le docker-compose :
https://dev.to/mattdark/deploy-a-mongodb-cluster-with-docker-compose-4ieo

Documentation pour comprendre le sharding et comment faire les routeurs : 
https://www.mongodb.com/docs/manual/sharding/
https://www.mongodb.com/docs/manual/core/sharded-cluster-components/

PyMongo:
https://www.w3schools.com/python/python_mongodb_getstarted.asp



Schéma de l'artchitecture voulue (généré par IA) :
┌──────────────────────────────────────────────────────────┐
│                    APPLICATION CLIENT                    │
└────────────────────┬─────────────────┬───────────────────┘
                     │                 │
              ┌──────▼──────┐   ┌──────▼──────┐
              │  MONGOS 1   │   │  MONGOS 2   │  ← ROUTEURS (HA)
              │  (Router)   │   │  (Router)   │
              └──────┬──────┘   └──────┬──────┘
                     │                 │
                     └────────┬────────┘
                              │
        ┌─────────────────────┼─────────────────────┐
        │                     │                     │
   ┌────▼─────┐         ┌─────▼────┐          ┌─────▼────┐
   │ SHARD 1  │         │ SHARD 2  │          │ SHARD 3  │  ← NOEUDS PRINCIPAUX
   │(Primary) │         │(Primary) │          │(Primary) │     (Replica Sets)
   └────┬─────┘         └─────┬────┘          └─────┬────┘
        │                     │                     │
   ┌────┼────┐           ┌────┼────┐           ┌────┼────┐
   │    │    │           │    │    │           │    │    │
┌──▼─┐┌─▼─┐┌─▼──┐     ┌──▼─┐┌─▼─┐┌─▼──┐     ┌──▼─┐┌─▼─┐┌─▼──┐
│Rep1││Rep││Rep3│     │Rep1││Rep││Rep3│     │Rep1││Rep││Rep3│
│    ││ 2 ││    │     │    ││ 2 ││    │     │    ││ 2 ││    │
└────┘└───┘└────┘     └────┘└───┘└────┘     └────┘└───┘└────┘

              ┌──────────────────────────┐
              │   CONFIG SERVERS (3)     │  ← Métadonnées
              │     (Replica Set)        │
              └──────────────────────────┘

Fonctionnement actuel (script ps et js) : 
docker-compose down -v (coupe les conteneurs)
Remove-Item -Recurse -Force c:\Users\gatue\Documents\R510-repartition-charge\docker\data\* (supprime tous les dossiers data)
docker-compose up -d (Lance les conteneurs)
Start-Sleep -Seconds 5; docker ps --format "table {{.Names}}\t{{.Status}}" (Vérifie que les conteneurs sont ok avant de lancer la commande suivante)
.\setup-cluster.ps1 (Lance les clusters via le script ps)